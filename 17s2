# COMP1521 17s2 Final Exam
# void colSum(m, N, a)

   .text
   .globl colSum

# params: m=$a0, N=$a1, a=$a2
colSum:
# prologue
   addi $sp, $sp, -4
   sw   $fp, ($sp)
   la   $fp, ($sp)
   addi $sp, $sp, -4
   sw   $ra, ($sp)
   addi $sp, $sp, -4
   sw   $s0, ($sp)
   addi $sp, $sp, -4
   sw   $s1, ($sp)
   addi $sp, $sp, -4
   sw   $s2, ($sp)
   addi $sp, $sp, -4
   sw   $s3, ($sp)
   addi $sp, $sp, -4
   sw   $s4, ($sp)
   addi $sp, $sp, -4
   sw   $s5, ($sp)
   # if you need to save more than six $s? registers
   # add extra code here to save them on the stack

# suggestion for local variables (based on C code):
# m=#s0, N=$s1, a=$s2, row=$s3, col=$s4, sum=$s5

    li $s4, 0 # col = 0
    forCol:
        bge $s4, $a1, endCol
        li $s5, 0 # sum = 0.
        li $s3, 0 # row = 0.
        
    forRow:
        bge $s3, $a1, endRow
        
        # calculate offset -- [row][col] = ((row * N) + col) * size
        move $t0, $s3 # t0 = row
        move $t1, $s4 # t1 = col
        
        mul $t2, $t0, $a1 # t2 = (row * N)
        add $t2, $t2, $t1 # t2 = (row * N) + col
        li $t3, 4
        mul $t2, $t2, $t3 # t2 = ((row * N) + col) * 4
        
        # load offset into m
        add $t2, $t2, $a0 # t2 = &m[row][col]
        lw $t2, ($t2) # t2 = m[row][col]
        
        add $s5, $s5, $t2
        
        addi $s3, $s3, 1
        j forRow
        
    endRow:
    
        # calculate offset -- [col] = (col) * size
        li $t0, 4
        mul $t0, $t0, $s4 # t0 = col * size
        
        # load offset into a
        add $t0, $t0, $a2
        sw $s5, ($t0) # a[col] = sum
        
        addi $s4, $s4, 1
        j forCol
    endCol:
# epilogue
   # if you saved more than six $s? registers
   # add extra code here to restore them
   lw   $s5, ($sp)
   addi $sp, $sp, 4
   lw   $s4, ($sp)
   addi $sp, $sp, 4
   lw   $s3, ($sp)
   addi $sp, $sp, 4
   lw   $s2, ($sp)
   addi $sp, $sp, 4
   lw   $s1, ($sp)
   addi $sp, $sp, 4
   lw   $s0, ($sp)
   addi $sp, $sp, 4
   lw   $ra, ($sp)
   addi $sp, $sp, 4
   lw   $fp, ($sp)
   addi $sp, $sp, 4
   j    $ra
