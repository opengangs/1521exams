# COMP1521 19t2 / Practice Prac Exam / Question 1
# int rmOdd (int *src, int n, int *dest)

	.text
	.globl	rmOdd

# params: src=$a0, n=$a1, dest=$a2
rmOdd:
	# prologue
	addi	$sp, $sp, -4
	sw	$fp, ($sp)
	la	$fp, ($sp)
	addi	$sp, $sp, -4
	sw	$ra, ($sp)
	addi	$sp, $sp, -4
	sw	$s0, ($sp)
	addi	$sp, $sp, -4
	sw	$s1, ($sp)
	# if you need to save more $s? registers
	# add the code to save them here

# function body
# locals: ...

	# add code for your rmOdd function here
	li $t0, 0 # i = 0
	li $t1, 0 # j = 0
	
	forLoop:
	    bge $t0, $a1, endLoop
	    
	    # src[i]
	    li $t2, 4
	    mul $t2, $t0, $t2 # t2 = [i]
	    add $t2, $t2, $a0 # t2 = src[i]
	    lw $t2, ($t2)
	    
	    li $t3, 2
	    div $t2, $t3
	    mfhi $t3 # t3 = src[i] % 2
	    
	    bne $t3, $zero, continue
	    
	    # dest[j]
	    li $t3, 4
	    mul $t3, $t1, $t3 # t3 = [j]
	    add $t3, $t3, $a2
	    
	    sw $t2, ($t3)
	    
	    addi $t1, $t1, 1
	    
	continue:
	    addi $t0, $t0, 1
	    j forLoop
	endLoop:
	    add $v0, $t1, $zero

# epilogue
	# if you saved more than two $s? registers
	# add the code to restore them here
	lw	$s1, ($sp)
	addi	$sp, $sp, 4
	lw	$s0, ($sp)
	addi	$sp, $sp, 4
	lw	$ra, ($sp)
	addi	$sp, $sp, 4
	lw	$fp, ($sp)
	addi	$sp, $sp, 4
	jr	$ra
